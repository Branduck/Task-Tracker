package org.example;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

//Add, Update, and Delete tasks
//Mark a task as in progress or done
//List all tasks
//List all tasks that are done
//List all tasks that are not done
//List all tasks that are in progress

//-----------------------------------------------------------------------------------------------------------------------------

//Task properties:
//id: A unique identifier for the task
//description: A short description of the task
//status: The status of the task (todo, in-progress, done)
//createdAt: The date and time when the task was created
//updatedAt: The date and time when the task was last updated


public class TaskTracker{

    ArrayList<Task> tasklist;


    TaskTracker(){
        tasklist = new ArrayList<>();
    }

    public void displayCompletedTask() {
        for (Task task: tasklist) {
            if (task.status.equalsIgnoreCase("completed")) {
                System.out.println(task.taskToString());
            }
        }
    }

    public void displayToDoTask() {
        for (Task task: tasklist) {
            if (task.status.equalsIgnoreCase("to do")) {
                System.out.println(task.taskToString());
            }
        }
    }

    public void displayInProgressTask() {
        for (Task task: tasklist) {
            if (task.status.equalsIgnoreCase("in progress")) {
                System.out.println(task.taskToString());
            }
        }
    }

    public static void main(String[] args) throws IOException {
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:MM:ss");
        TaskTracker tasktracker = new TaskTracker();

        Task task = new Task("Grocery");

        /*FileWriter fwriter = new FileWriter("task.txt");
        fwriter.write(task.taskToString());
        fwriter.close();
        */
        task.update("completed");


        try {

            BufferedReader bReader = new BufferedReader(new FileReader("newtask.txt"));
            BufferedWriter bWriter = new BufferedWriter(new FileWriter("task.txt"));
            String line;

            while ((line = bReader.readLine()) != null) {

                if (line.startsWith("ID: " + task.id)) {
                    bWriter.write(line.replace("Completed", "To Do"));

                }
            }

            bReader.close();
            bWriter.close();

            File file = new File("newtask.txt");
            File file2 = new File("task.txt");

            if (file.delete()) {
                file.renameTo(file2);
            }


        } catch (Exception e) {
            // TODO: handle exception
        }


    }


}

class Task{

    static int idCounter = 0;
    int id;
    private String description;
    String status;
    LocalDateTime createdAt;
    LocalDateTime updatedAt;

    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:MM:ss");

    Task(String description){

        this.id = idCounter;
        this.status = "To Do";
        this.description = description;
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();

        idCounter++;
    }


    public String getTask(){
        return description;
    }

    public void update(String status){
        this.status = status;
        this.updatedAt = LocalDateTime.now();
    }

    public void delete(){
        this.description = null;
        this.status = null;
        idCounter--;
    }

    //Returns Task's properties 
    public String taskToString(){
        return "ID: " + id + ", Description: " + description + ", Status: " + status + ", Time Created: " + createdAt.format(dateFormatter) + ", Updated at: " + updatedAt.format(dateFormatter) + "\n";
    }
    
  

}

